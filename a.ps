%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: skripsie.dvi
%%Pages: 24
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips skripsie.dvi -o a.ps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2000.02.29:0616
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (skripsie.dvi)
@start end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop eop
%%Page: 1 2
1 1 bop eop
%%Page: 2 3
2 2 bop eop
%%Page: 3 4
3 3 bop eop
%%Page: 4 5
4 4 bop eop
%%Page: 5 6
5 5 bop eop
%%Page: 6 7
6 6 bop eop
%%Page: 7 8
7 7 bop 257 4665 a @beginspecial 0 @llx 0 @lly 380 @urx
443 @ury 3800 @rwi @setspecial
%%BeginDocument: m1.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: m1.eps
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta3
%%CreationDate: Sun Jun 21 04:17:11 1998
%%For: thys@klaribel.feetjie.land ()
%%Orientation: Portrait
%%BoundingBox: 0 0 380 443
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-71.0 559.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 10312 m -1000 -1000 l 8512 -1000 l 8512 10312 l cp clip
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 1200 4050 m 2925 4050 l 2925 5250 l 1200 5250 l cp gs col0 s gr 
% Polyline
n 1200 4350 m 2925 4350 l gs col0 s gr 
% Polyline
n 1200 4950 m 2925 4950 l gs col0 s gr 
% Polyline
n 3450 4050 m 5175 4050 l 5175 5250 l 3450 5250 l cp gs col0 s gr 
% Polyline
n 3450 4350 m 5175 4350 l gs col0 s gr 
% Polyline
n 3450 4950 m 5175 4950 l gs col0 s gr 
% Polyline
n 5775 4050 m 7500 4050 l 7500 5250 l 5775 5250 l cp gs col0 s gr 
% Polyline
n 5775 4350 m 7500 4350 l gs col0 s gr 
% Polyline
n 5775 4950 m 7500 4950 l gs col0 s gr 
% Polyline
n 2025 6450 m 3750 6450 l 3750 7650 l 2025 7650 l cp gs col0 s gr 
% Polyline
n 2025 6750 m 3750 6750 l gs col0 s gr 
% Polyline
n 2025 7350 m 3750 7350 l gs col0 s gr 
% Polyline
n 4650 6450 m 6375 6450 l 6375 7650 l 4650 7650 l cp gs col0 s gr 
% Polyline
n 4650 6750 m 6375 6750 l gs col0 s gr 
% Polyline
n 4650 7350 m 6375 7350 l gs col0 s gr 
% Polyline
n 3450 1950 m 5175 1950 l 5175 3150 l 3450 3150 l cp gs col0 s gr 
% Polyline
n 3450 2250 m 5175 2250 l gs col0 s gr 
% Polyline
n 3450 2850 m 5175 2850 l gs col0 s gr 
% Polyline
n 1455 8400 m 1350 8400 1350 9195 105 arcto 4 {pop} repeat
  1350 9300 2445 9300 105 arcto 4 {pop} repeat
  2550 9300 2550 8505 105 arcto 4 {pop} repeat
  2550 8400 1455 8400 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 1350 8700 m 2550 8700 l gs col0 s gr 
% Polyline
n 1350 9075 m 2550 9075 l gs col0 s gr 
% Polyline
n 3705 8400 m 3600 8400 3600 9195 105 arcto 4 {pop} repeat
  3600 9300 4695 9300 105 arcto 4 {pop} repeat
  4800 9300 4800 8505 105 arcto 4 {pop} repeat
  4800 8400 3705 8400 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 3600 8700 m 4800 8700 l gs col0 s gr 
% Polyline
n 3600 9075 m 4800 9075 l gs col0 s gr 
% Polyline
n 6105 8400 m 6000 8400 6000 9195 105 arcto 4 {pop} repeat
  6000 9300 7095 9300 105 arcto 4 {pop} repeat
  7200 9300 7200 8505 105 arcto 4 {pop} repeat
  7200 8400 6105 8400 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 6000 8700 m 7200 8700 l gs col0 s gr 
% Polyline
n 6000 9075 m 7200 9075 l gs col0 s gr 
% Polyline
n 2025 4050 m 2025 3600 l 6675 3600 l 6675 4050 l gs col0 s gr 
% Polyline
n 4350 3150 m 4350 4050 l gs col0 s gr 
% Polyline
n 2850 6450 m 2850 6000 l 5475 6000 l 5475 6450 l gs col0 s gr 
% Polyline
n 4275 5250 m 4275 6000 l gs col0 s gr 
% Polyline
n 1800 8400 m 1800 8100 l 4125 8100 l 4125 8400 l gs col0 s gr 
% Polyline
n 2850 7650 m 2850 8100 l gs col0 s gr 
% Polyline
n 5475 7650 m 5475 8100 l gs col0 s gr 
% Polyline
n 6675 5250 m 6675 8400 l gs col0 s gr 
% Polyline
n 4275 8400 m 4275 8100 l 6675 8100 l gs col0 s gr 
% Polyline
n 4815 8865 m 6015 8865 l gs col0 s gr 
/Times-Roman ff 180.00 scf sf
3825 2175 m
gs 1 -1 sc (EEG System) col0 sh gr
/Times-Roman ff 180.00 scf sf
3825 2550 m
gs 1 -1 sc (Userfriendly) col0 sh gr
/Times-Roman ff 180.00 scf sf
3900 2775 m
gs 1 -1 sc (Interface) col0 sh gr
/Times-Roman ff 180.00 scf sf
1425 4275 m
gs 1 -1 sc (Signal Aquisition) col0 sh gr
/Times-Roman ff 180.00 scf sf
3675 4275 m
gs 1 -1 sc (Signal Processing) col0 sh gr
/Times-Roman ff 180.00 scf sf
6000 4275 m
gs 1 -1 sc (Signal Conversion) col0 sh gr
/Times-Roman ff 180.00 scf sf
2175 6675 m
gs 1 -1 sc (Primary Processing) col0 sh gr
/Times-Roman ff 180.00 scf sf
4680 6675 m
gs 1 -1 sc (Secondary Processing) col0 sh gr
/Times-Roman ff 180.00 scf sf
3900 8625 m
gs 1 -1 sc (Filtering) col0 sh gr
/Times-Roman ff 180.00 scf sf
1575 8625 m
gs 1 -1 sc (Differation) col0 sh gr
/Times-Roman ff 180.00 scf sf
6300 8625 m
gs 1 -1 sc (Display) col0 sh gr
/Times-Roman ff 180.00 scf sf
1425 5175 m
gs 1 -1 sc (Active ) col0 sh gr
/Times-Roman ff 180.00 scf sf
1650 4725 m
gs 1 -1 sc (Electrodes) col0 sh gr
/Times-Roman ff 180.00 scf sf
2025 5175 m
gs 1 -1 sc (Electrodes) col0 sh gr
/Times-Roman ff 180.00 scf sf
3750 4725 m
gs 1 -1 sc (EEG Extraction) col0 sh gr
/Times-Roman ff 180.00 scf sf
5250 7575 m
gs 1 -1 sc (DSP) col0 sh gr
/Times-Roman ff 180.00 scf sf
6480 8955 m
gs 1 -1 sc (PC) col0 sh gr
/Times-Roman ff 180.00 scf sf
5175 7125 m
gs 1 -1 sc (Software) col0 sh gr
/Times-Roman ff 180.00 scf sf
2475 7125 m
gs 1 -1 sc (Hardware) col0 sh gr
/Times-Roman ff 180.00 scf sf
1575 8970 m
gs 1 -1 sc (Diff Amp) col0 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial eop
%%Page: 8 9
8 8 bop 257 4615 a @beginspecial 0 @llx 0 @lly 441 @urx
431 @ury 4410 @rwi @setspecial
%%BeginDocument: sigf.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: sigf.eps
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta3
%%CreationDate: Mon Jun 22 01:10:13 1998
%%For: thys@klaribel.feetjie.land ()
%%Orientation: Portrait
%%BoundingBox: 0 0 441 431
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 0.7500
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-12.0 474.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 11512 m -1000 -1000 l 11062 -1000 l 11062 11512 l cp clip
 0.04500 0.04500 sc
% Polyline
7.500 slw
n 975 975 m 2775 975 l 2775 2625 l 975 2625 l cp gs col0 s gr 
% Polyline
n 975 1500 m 2775 1500 l gs col0 s gr 
% Polyline
n 975 2175 m 2775 2175 l gs col0 s gr 
% Polyline
n 3225 2850 m 5025 2850 l 5025 4500 l 3225 4500 l cp gs col0 s gr 
% Polyline
n 3225 3375 m 5025 3375 l gs col0 s gr 
% Polyline
n 3225 4050 m 5025 4050 l gs col0 s gr 
% Polyline
n 3225 5025 m 5025 5025 l 5025 6675 l 3225 6675 l cp gs col0 s gr 
% Polyline
n 3225 5550 m 5025 5550 l gs col0 s gr 
% Polyline
n 3225 6225 m 5025 6225 l gs col0 s gr 
% Polyline
n 5550 6900 m 7350 6900 l 7350 8550 l 5550 8550 l cp gs col0 s gr 
% Polyline
n 5550 7425 m 7350 7425 l gs col0 s gr 
% Polyline
n 5550 8100 m 7350 8100 l gs col0 s gr 
% Polyline
n 7800 8850 m 9600 8850 l 9600 10500 l 7800 10500 l cp gs col0 s gr 
% Polyline
n 7800 9375 m 9600 9375 l gs col0 s gr 
% Polyline
n 7800 10050 m 9600 10050 l gs col0 s gr 
% Polyline
gs  clippath
828 1770 m 948 1800 l 828 1830 l 990 1830 l 990 1770 l cp
clip
n 300 1800 m 975 1800 l gs col0 s gr gr

% arrowhead
n 828 1770 m 948 1800 l 828 1830 l 828 1800 l 828 1770 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
3078 3720 m 3198 3750 l 3078 3780 l 3240 3780 l 3240 3720 l cp
clip
n 2775 1800 m 2925 1800 l 2925 3750 l 3225 3750 l gs col0 s gr gr

% arrowhead
n 3078 3720 m 3198 3750 l 3078 3780 l 3078 3750 l 3078 3720 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
9753 1770 m 9873 1800 l 9753 1830 l 9915 1830 l 9915 1770 l cp
clip
n 2925 1800 m 9900 1800 l gs col0 s gr gr

% arrowhead
n 9753 1770 m 9873 1800 l 9753 1830 l 9753 1800 l 9753 1770 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
9753 3720 m 9873 3750 l 9753 3780 l 9915 3780 l 9915 3720 l cp
clip
n 5025 3750 m 9900 3750 l gs col0 s gr gr

% arrowhead
n 9753 3720 m 9873 3750 l 9753 3780 l 9753 3750 l 9753 3720 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
3078 5820 m 3198 5850 l 3078 5880 l 3240 5880 l 3240 5820 l cp
clip
n 5400 3750 m 5400 4800 l 2925 4800 l 2925 5850 l 3225 5850 l gs col0 s gr gr

% arrowhead
n 3078 5820 m 3198 5850 l 3078 5880 l 3078 5850 l 3078 5820 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
9828 5820 m 9948 5850 l 9828 5880 l 9990 5880 l 9990 5820 l cp
clip
n 5025 5850 m 9975 5850 l gs col0 s gr gr

% arrowhead
n 9828 5820 m 9948 5850 l 9828 5880 l 9828 5850 l 9828 5820 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
5403 7770 m 5523 7800 l 5403 7830 l 5565 7830 l 5565 7770 l cp
clip
n 5325 5850 m 5325 7800 l 5550 7800 l gs col0 s gr gr

% arrowhead
n 5403 7770 m 5523 7800 l 5403 7830 l 5403 7800 l 5403 7770 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
9828 7770 m 9948 7800 l 9828 7830 l 9990 7830 l 9990 7770 l cp
clip
n 7350 7800 m 9975 7800 l gs col0 s gr gr

% arrowhead
n 9828 7770 m 9948 7800 l 9828 7830 l 9828 7800 l 9828 7770 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
7653 9720 m 7773 9750 l 7653 9780 l 7815 9780 l 7815 9720 l cp
clip
n 7575 7800 m 7575 9750 l 7800 9750 l gs col0 s gr gr

% arrowhead
n 7653 9720 m 7773 9750 l 7653 9780 l 7653 9750 l 7653 9720 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
9903 9720 m 10023 9750 l 9903 9780 l 10065 9780 l 10065 9720 l cp
clip
n 9600 9750 m 10050 9750 l gs col0 s gr gr

% arrowhead
n 9903 9720 m 10023 9750 l 9903 9780 l 9903 9750 l 9903 9720 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
7653 9945 m 7773 9975 l 7653 10005 l 7815 10005 l 7815 9945 l cp
clip
n 5325 7800 m 5325 9975 l 7800 9975 l gs col0 s gr gr

% arrowhead
n 7653 9945 m 7773 9975 l 7653 10005 l 7653 9975 l 7653 9945 l  cp gs 0.00 setgray ef gr  col0 s
/Times-Roman ff 180.00 scf sf
1275 1275 m
gs 1 -1 sc (Signal aquisition) col0 sh gr
/Times-Roman ff 180.00 scf sf
3675 3075 m
gs 1 -1 sc (Low level) col0 sh gr
/Times-Roman ff 180.00 scf sf
3675 3225 m
gs 1 -1 sc (processing) col0 sh gr
/Times-Roman ff 180.00 scf sf
3450 5325 m
gs 1 -1 sc (Signal conversion) col0 sh gr
/Times-Roman ff 180.00 scf sf
6000 7125 m
gs 1 -1 sc (High level) col0 sh gr
/Times-Roman ff 180.00 scf sf
6000 7275 m
gs 1 -1 sc (processing) col0 sh gr
/Times-Roman ff 180.00 scf sf
8175 9150 m
gs 1 -1 sc (Signal display) col0 sh gr
/Times-Roman ff 180.00 scf sf
1425 1725 m
gs 1 -1 sc (Analogue) col0 sh gr
/Times-Roman ff 180.00 scf sf
1425 1875 m
gs 1 -1 sc (composite ) col0 sh gr
/Times-Roman ff 180.00 scf sf
1500 2025 m
gs 1 -1 sc (signal) col0 sh gr
/Times-Roman ff 180.00 scf sf
1200 2475 m
gs 1 -1 sc (Active electrodes) col0 sh gr
/Times-Roman ff 180.00 scf sf
3675 3600 m
gs 1 -1 sc (Analogue) col0 sh gr
/Times-Roman ff 180.00 scf sf
3600 3750 m
gs 1 -1 sc (composite ) col0 sh gr
/Times-Roman ff 180.00 scf sf
3450 3900 m
gs 1 -1 sc (signal) col0 sh gr
/Times-Roman ff 180.00 scf sf
3975 3900 m
gs 1 -1 sc (amplified) col0 sh gr
/Times-Roman ff 180.00 scf sf
3525 4275 m
gs 1 -1 sc (Differential amp) col0 sh gr
/Times-Roman ff 180.00 scf sf
3750 4425 m
gs 1 -1 sc (Filtering) col0 sh gr
/Times-Roman ff 180.00 scf sf
3900 6525 m
gs 1 -1 sc (AD) col0 sh gr
/Times-Roman ff 180.00 scf sf
3675 5775 m
gs 1 -1 sc (Analogue) col0 sh gr
/Times-Roman ff 180.00 scf sf
3750 6150 m
gs 1 -1 sc (signal) col0 sh gr
/Times-Roman ff 180.00 scf sf
3750 6000 m
gs 1 -1 sc (EEG) col0 sh gr
/Times-Roman ff 180.00 scf sf
6375 3600 m
gs 1 -1 sc (Analogue EEG signal) col0 sh gr
/Times-Roman ff 180.00 scf sf
6300 5625 m
gs 1 -1 sc (Digital EEG signal) col0 sh gr
/Times-Roman ff 180.00 scf sf
6225 1575 m
gs 1 -1 sc (Impedance matched signal) col0 sh gr
/Times-Roman ff 180.00 scf sf
5775 7725 m
gs 1 -1 sc (Digital EEG signal) col0 sh gr
/Times-Roman ff 180.00 scf sf
8100 7575 m
gs 1 -1 sc (Processed signal) col0 sh gr
/Times-Roman ff 180.00 scf sf
8025 9675 m
gs 1 -1 sc (Processed signal) col0 sh gr
/Times-Roman ff 180.00 scf sf
7950 9900 m
gs 1 -1 sc (Digital EEG signal) col0 sh gr
/Times-Roman ff 180.00 scf sf
5775 8400 m
gs 1 -1 sc (Averaging) col0 sh gr
/Times-Roman ff 180.00 scf sf
6750 8400 m
gs 1 -1 sc (FFT) col0 sh gr
/Times-Roman ff 180.00 scf sf
8100 10350 m
gs 1 -1 sc (Graphic output) col0 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial eop
%%Page: 9 10
9 9 bop eop
%%Page: 10 11
10 10 bop 257 4008 a @beginspecial 0 @llx 0 @lly 72 @urx
72 @ury 720 @rwi @setspecial @endspecial eop
%%Page: 11 12
11 11 bop 257 1429 a @beginspecial 0 @llx 0 @lly 72 @urx
72 @ury 720 @rwi @setspecial @endspecial eop
%%Page: 12 13
12 12 bop eop
%%Page: 13 14
13 13 bop eop
%%Page: 14 15
14 14 bop 257 4351 a @beginspecial 0 @llx 0 @lly 338
@urx 256 @ury 3380 @rwi @setspecial
%%BeginDocument: opamp.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: opamp.eps
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta3
%%CreationDate: Sat Jul 25 13:35:19 1998
%%For: thys@klaribel.feetjie.land ()
%%Orientation: Portrait
%%BoundingBox: 0 0 338 256
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-107.0 387.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/reencdict 12 dict def /ReEncode { reencdict begin
/newcodesandnames exch def /newfontname exch def /basefontname exch def
/basefontdict basefontname findfont def /newfont basefontdict maxlength dict def
basefontdict { exch dup /FID ne { dup /Encoding eq
{ exch dup length array copy newfont 3 1 roll put }
{ exch newfont 3 1 roll put } ifelse } { pop pop } ifelse } forall
newfont /FontName newfontname put newcodesandnames aload pop
128 1 255 { newfont /Encoding get exch /.notdef put } for
newcodesandnames length 2 idiv { newfont /Encoding get 3 1 roll put } repeat
newfontname newfont definefont pop end } def
/isovec [
8#200 /grave 8#201 /acute 8#202 /circumflex 8#203 /tilde
8#204 /macron 8#205 /breve 8#206 /dotaccent 8#207 /dieresis
8#210 /ring 8#211 /cedilla 8#212 /hungarumlaut 8#213 /ogonek 8#214 /caron
8#220 /dotlessi 8#230 /oe 8#231 /OE
8#240 /space 8#241 /exclamdown 8#242 /cent 8#243 /sterling
8#244 /currency 8#245 /yen 8#246 /brokenbar 8#247 /section 8#250 /dieresis
8#251 /copyright 8#252 /ordfeminine 8#253 /guillemotleft 8#254 /logicalnot
8#255 /endash 8#256 /registered 8#257 /macron 8#260 /degree 8#261 /plusminus
8#262 /twosuperior 8#263 /threesuperior 8#264 /acute 8#265 /mu 8#266 /paragraph
8#267 /periodcentered 8#270 /cedilla 8#271 /onesuperior 8#272 /ordmasculine
8#273 /guillemotright 8#274 /onequarter 8#275 /onehalf
8#276 /threequarters 8#277 /questiondown 8#300 /Agrave 8#301 /Aacute
8#302 /Acircumflex 8#303 /Atilde 8#304 /Adieresis 8#305 /Aring
8#306 /AE 8#307 /Ccedilla 8#310 /Egrave 8#311 /Eacute
8#312 /Ecircumflex 8#313 /Edieresis 8#314 /Igrave 8#315 /Iacute
8#316 /Icircumflex 8#317 /Idieresis 8#320 /Eth 8#321 /Ntilde 8#322 /Ograve
8#323 /Oacute 8#324 /Ocircumflex 8#325 /Otilde 8#326 /Odieresis 8#327 /multiply
8#330 /Oslash 8#331 /Ugrave 8#332 /Uacute 8#333 /Ucircumflex
8#334 /Udieresis 8#335 /Yacute 8#336 /Thorn 8#337 /germandbls 8#340 /agrave
8#341 /aacute 8#342 /acircumflex 8#343 /atilde 8#344 /adieresis 8#345 /aring
8#346 /ae 8#347 /ccedilla 8#350 /egrave 8#351 /eacute
8#352 /ecircumflex 8#353 /edieresis 8#354 /igrave 8#355 /iacute
8#356 /icircumflex 8#357 /idieresis 8#360 /eth 8#361 /ntilde 8#362 /ograve
8#363 /oacute 8#364 /ocircumflex 8#365 /otilde 8#366 /odieresis 8#367 /divide
8#370 /oslash 8#371 /ugrave 8#372 /uacute 8#373 /ucircumflex
8#374 /udieresis 8#375 /yacute 8#376 /thorn 8#377 /ydieresis] def
/Times-Roman /Times-Roman-iso isovec ReEncode
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 7444 m -1000 -1000 l 8408 -1000 l 8408 7444 l cp clip
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 4125 2625 m 4275 2850 l 4425 2625 l 4575 2850 l 4725 2625 l 4875 2775 l
 5025 2775 l gs col0 s gr 
% Polyline
n 4125 2625 m 4050 2775 l 3825 2775 l gs col0 s gr 
% Polyline
n 3225 5475 m 3450 5325 l 3225 5175 l 3450 5025 l 3225 4875 l 3375 4725 l
 3375 4575 l gs col0 s gr 
% Polyline
n 3225 5475 m 3375 5550 l 3375 5775 l gs col0 s gr 
% Rotated Ellipse
gs
3412 6113 tr
-90.000 rot
n 0 0 323 323 0 360 DrawEllipse 90.000 rot
gs col0 s gr
gr

% Polyline
n 2326 2625 m 2476 2850 l 2625 2625 l 2775 2850 l 2925 2625 l 3075 2775 l
 3225 2775 l gs col0 s gr 
% Polyline
n 2326 2625 m 2251 2775 l 2026 2775 l gs col0 s gr 
% Ellipse
n 7117 4207 53 53 0 360 DrawEllipse gs col-1 s gr

% Polyline
n 4200 3600 m 4200 4800 l 5400 4200 l 4200 3600 l  cp gs col-1 s gr 
% Polyline
n 5400 4200 m 7050 4200 l gs col-1 s gr 
% Polyline
n 4200 3900 m 3525 3900 l 3525 2775 l gs col0 s gr 
% Polyline
n 3225 2775 m 3900 2775 l gs col0 s gr 
% Polyline
n 3375 4575 m 4200 4575 l gs col0 s gr 
% Polyline
n 5025 2775 m 6000 2775 l 6000 4200 l gs col0 s gr 
% Polyline
n 2025 2775 m 2025 3450 l gs col0 s gr 
% Polyline
n 1875 3450 m 2250 3450 l 2025 3750 l 1800 3450 l 2025 3450 l cp gs col0 s gr 
/Times-Roman-iso ff 180.00 scf sf
6870 4005 m
gs 1 -1 sc (Output) col-1 sh gr
/Times-Roman-iso ff 180.00 scf sf
4275 3975 m
gs 1 -1 sc (-) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
4275 4650 m
gs 1 -1 sc (+) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
2475 2325 m
gs 1 -1 sc (R2) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
4275 2325 m
gs 1 -1 sc (R3) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
2775 5175 m
gs 1 -1 sc (R1) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
5025 4725 m
gs 1 -1 sc (U1) col0 sh gr
/Times-Roman-iso ff 180.00 scf sf
3975 6225 m
gs 1 -1 sc (Physical Electrode) col0 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial eop
%%Page: 15 16
15 15 bop 257 2665 a @beginspecial 0 @llx 0 @lly 242
@urx 263 @ury 2420 @rwi @setspecial
%%BeginDocument: electrode-structure.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: electrode-structure.fig
%%Creator: fig2dev Version 3.1 Patchlevel 2
%%CreationDate: Fri Nov  7 00:53:21 1997
%%For: thys@klaribel (RHS Linux User)
%Magnification: 0.75
%%Orientation: Portrait
%%BoundingBox: 0 0 242 263
%%Pages: 0
%%BeginSetup
%%IncludeFeature: *PageSize Letter
%%EndSetup
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-68.0 349.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<010101010202020204040404080808081010101020202020
	404040408080808001010101020202020404040408080808
	101010102020202040404040808080800101010102020202
	040404040808080810101010202020204040404080808080
	010101010202020204040404080808081010101020202020
	4040404080808080>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n 0 792 m 0 0 l 612 0 l 612 792 l cp clip
 0.04500 0.04500 sc
7.500 slw
% Ellipse
n 4800 4800 691 691 0 360 DrawEllipse gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 273.93 273.93] PATmp PATsp ef gr PATusp gs col-1 s gr

% Polyline
gs  clippath
5364 7365 m 5508 7395 l 5364 7425 l 5550 7425 l 5550 7365 l  cp clip
4266 7425 m 4122 7395 l 4266 7365 l 4080 7365 l 4080 7425 l  cp clip
n 4095 7395 m 5535 7395 l gs col-1 s gr gr

% arrowhead
n 4266 7425 m 4122 7395 l 4266 7365 l 4242 7395 l 4266 7425 l  cp gs 0.00 setgray ef gr  col-1 s
% arrowhead
n 5364 7365 m 5508 7395 l 5364 7425 l 5388 7395 l 5364 7365 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
 [66.7] 0 sd
gs  clippath
6225 6774 m 6195 6918 l 6165 6774 l 6165 6960 l 6225 6960 l  cp clip
6165 6621 m 6195 6477 l 6225 6621 l 6225 6435 l 6165 6435 l  cp clip
n 6195 6450 m 6195 6945 l gs col-1 s gr gr
 [] 0 sd
% arrowhead
n 6165 6621 m 6195 6477 l 6225 6621 l 6195 6597 l 6165 6621 l  cp gs 0.00 setgray ef gr  col-1 s
% arrowhead
n 6225 6774 m 6195 6918 l 6165 6774 l 6195 6798 l 6225 6774 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
n 4230 6450 m 4125 6450 4125 6870 105 arcto 4 {pop} repeat
  4125 6975 5370 6975 105 arcto 4 {pop} repeat
  5475 6975 5475 6555 105 arcto 4 {pop} repeat
  5475 6450 4230 6450 105 arcto 4 {pop} repeat
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 275.00 430.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 4125 6600 m 5475 6600 l gs col-1 s gr 
% Polyline
n 4080 4845 m 4080 4845 l gs col-1 s gr
% Polyline
n 5520 4815 m 5520 4815 l gs col-1 s gr
% Polyline
n 5580 6450 m 5580 6450 l gs col-1 s gr
% Polyline
n 5550 6945 m 5550 6945 l gs col-1 s gr
% Polyline
 [15 50.0] 50.0 sd
n 4125 4875 m 4125 7425 l gs col-1 s gr  [] 0 sd
% Polyline
 [15 50.0] 50.0 sd
n 5475 4800 m 5475 7425 l gs col-1 s gr  [] 0 sd
% Polyline
 [15 50.0] 50.0 sd
n 5400 6450 m 6225 6450 l gs col-1 s gr  [] 0 sd
% Polyline
 [15 50.0] 50.0 sd
n 5250 6975 m 6225 6975 l gs col-1 s gr  [] 0 sd
% Interp Spline
gs n 4095 6720 m
	3793.8 6740.2 3662.5 6740.2 3570 6720 curveto
	3426.5 6688.6 3142.7 6520.5 3015 6465 curveto
	2825.2 6382.5 2419.4 6119.9 2175 6120 curveto
	2026.6 6120.1 1771.4 6233.4 1665 6330 curveto
	1623.3 6367.9 1589.5 6431.6 1530 6585 curveto
 gs col-1 s gr
 gr

% Interp Spline
gs n 4785 4080 m
	4767.6 3779.5 4771.4 3648.2 4800 3555 curveto
	4828.4 3462.4 4964.2 3301.5 5010 3225 curveto
	5042.3 3171.1 5171.3 3086.7 5145 2985 curveto
	5079.3 2731.4 4724.3 2671.5 4560 2625 curveto
	4481.1 2602.7 4306.9 2714.7 4230 2625 curveto
	4092.0 2464.1 4215.6 2178.7 4320 2040 curveto
	4357.9 1989.7 4478.6 2006.9 4515 1950 curveto
	4518.8 1944.0 4518.8 1936.5 4515 1920 curveto
 gs col-1 s gr
 gr

/Times-Roman ff 180.00 scf sf
4575 7725 m
gs 1 -1 sc (10 mm) col-1 sh gr
/Times-Roman ff 180.00 scf sf
6375 6750 m
gs 1 -1 sc (10 mm) col-1 sh gr
$F2psEnd
rs
end

%%EndDocument
 @endspecial 257 4851 1296 4 v eop
%%Page: 16 17
16 16 bop eop
%%Page: 17 18
17 17 bop eop
%%Page: 18 19
18 18 bop eop
%%Page: 19 20
19 19 bop eop
%%Page: 20 21
20 20 bop eop
%%Page: 21 22
21 21 bop eop
%%Page: 22 23
22 22 bop 257 2523 a @beginspecial 0 @llx 0 @lly 412
@urx 246 @ury 4120 @rwi @setspecial
%%BeginDocument: silver.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: silver.eps
%%Creator: fig2dev Version 3.2 Patchlevel 0-beta3
%%CreationDate: Sun Jul 26 16:25:26 1998
%%For: thys@klaribel.feetjie.land ()
%%Orientation: Portrait
%%BoundingBox: 0 0 412 246
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-71.0 402.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 7687 m -1000 -1000 l 9037 -1000 l 9037 7687 l cp clip
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 5550 3525 m 5400 3300 l 5250 3525 l 5100 3300 l 4950 3525 l 4800 3375 l
 4650 3375 l gs col0 s gr 
% Polyline
n 5550 3525 m 5625 3375 l 5850 3375 l gs col0 s gr 
% Rotated Ellipse
gs
6862 5288 tr
-90.000 rot
n 0 0 323 323 0 360 DrawEllipse 90.000 rot
gs col0 s gr
gr

% Polyline
n 5850 3375 m 6825 3375 l 6825 4950 l gs col0 s gr 
% Polyline
n 4650 3375 m 3750 3375 l gs col0 s gr 
% Polyline
n 2280 4725 m 2175 4725 2175 5820 105 arcto 4 {pop} repeat
  2175 5925 2370 5925 105 arcto 4 {pop} repeat
  2475 5925 2475 4830 105 arcto 4 {pop} repeat
  2475 4725 2280 4725 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 3750 2625 m 3750 4050 l gs col0 s gr 
% Polyline
n 3525 3000 m 3525 3750 l gs col0 s gr 
% Polyline
n 3525 3375 m 2325 3375 l 2325 4725 l gs col0 s gr 
% Polyline
n 1200 3750 m 1200 6675 l 8025 6675 l 8025 3675 l gs col0 s gr 
% Polyline
gs  clippath
5400 2905 m 5466 2800 l 5457 2924 l 5508 2770 l 5451 2751 l cp
clip
n 5100 3900 m 5475 2775 l gs col0 s gr gr

% arrowhead
n 5400 2905 m 5466 2800 l 5457 2924 l  col0 s
% Polyline
 [60] 0 sd
n 1200 4275 m 8025 4275 l gs col0 s gr  [] 0 sd
/Times-Roman ff 180.00 scf sf
3975 3000 m
gs 1 -1 sc (+) col0 sh gr
/Times-Roman ff 180.00 scf sf
6525 6075 m
gs 1 -1 sc (Electrode) col0 sh gr
/Times-Roman ff 180.00 scf sf
1950 6300 m
gs 1 -1 sc (Silver wire) col0 sh gr
/Times-Roman ff 180.00 scf sf
4275 5325 m
gs 1 -1 sc (Solution) col0 sh gr
$F2psEnd
rs

%%EndDocument
 @endspecial eop
%%Page: 23 24
23 23 bop eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
