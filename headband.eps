%!PS-Adobe-2.0 EPSF-2.0
%%Title: headband.eps
%%Creator: fig2dev Version 3.2.3 Patchlevel 
%%CreationDate: Wed May  3 04:35:51 2000
%%For: thys@klara (Thys Meintjes)
%%BoundingBox: 0 0 408 251
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 251 moveto 0 0 lineto 408 0 lineto 408 251 lineto closepath clip newpath
-102.0 344.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
%thys
	  2 index oldshow		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% crosshatch30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<033003300c0c0c0c30033003c000c000300330030c0c0c0c
	0330033000c000c0033003300c0c0c0c30033003c000c000
	300330030c0c0c0c0330033000c000c0>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P3 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
%%Page: 1 1
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
7.500 slw
n 2280 5250 m 2175 5250 2175 5595 105 arcto 4 {pop} repeat
  2175 5700 7620 5700 105 arcto 4 {pop} repeat
  7725 5700 7725 5355 105 arcto 4 {pop} repeat
  7725 5250 2280 5250 105 arcto 4 {pop} repeat
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P3 [16 0 0 -8 145.00 350.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
15.000 slw
 [90] 0 sd
n 2250 5250 m
 7575 5250 l gs col0 s gr  [] 0 sd
% Polyline
7.500 slw
n 2355 2250 m 2250 2250 2250 3795 105 arcto 4 {pop} repeat
  2250 3900 2670 3900 105 arcto 4 {pop} repeat
  2775 3900 2775 2355 105 arcto 4 {pop} repeat
  2775 2250 2355 2250 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 1830 2250 m 1725 2250 1725 3720 105 arcto 4 {pop} repeat
  1725 3825 2295 3825 105 arcto 4 {pop} repeat
  2400 3825 2400 2355 105 arcto 4 {pop} repeat
  2400 2250 1830 2250 105 arcto 4 {pop} repeat
 cp gs col7 0.15 shd ef gr gs col0 s gr 
% Polyline
n 7455 2250 m 7350 2250 7350 3720 105 arcto 4 {pop} repeat
  7350 3825 7920 3825 105 arcto 4 {pop} repeat
  8025 3825 8025 2355 105 arcto 4 {pop} repeat
  8025 2250 7455 2250 105 arcto 4 {pop} repeat
 cp gs col7 0.15 shd ef gr gs col0 s gr 
% Polyline
15.000 slw
n 1725 5700 m
 2625 5700 l gs col7 0.15 shd ef gr gs col0 s gr 
% Polyline
n 7200 5700 m
 8100 5700 l gs col7 0.15 shd ef gr gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
5951 5045 m 5925 4991 l 5758 5071 l 5907 5034 l 5784 5125 l cp
eoclip
n 5100 4800 m 5101 4802 l 5104 4806 l 5109 4814 l 5116 4824 l 5125 4838 l
 5136 4853 l 5149 4870 l 5164 4888 l 5179 4907 l 5197 4926 l
 5217 4945 l 5239 4965 l 5264 4985 l 5293 5005 l 5325 5025 l
 5358 5042 l 5388 5057 l 5412 5068 l 5432 5075 l 5446 5081 l
 5456 5084 l 5463 5086 l 5469 5088 l 5475 5088 l 5482 5089 l
 5492 5091 l 5508 5092 l 5528 5095 l 5555 5097 l 5588 5099 l
 5625 5100 l 5662 5099 l 5697 5096 l 5728 5092 l 5757 5086 l
 5783 5080 l 5807 5073 l 5829 5065 l 5850 5058 l 5869 5050 l
 5886 5043 l 5900 5037 l
 5925 5025 l gs col0 s gr gr

% arrowhead
n 5784 5125 m 5907 5034 l 5758 5071 l 5798 5085 l 5784 5125 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
1980 3886 m 1920 3883 l 1913 4068 l 1949 3920 l 1973 4071 l cp
eoclip
n 2325 4575 m 2323 4574 l 2319 4573 l 2311 4571 l 2300 4567 l 2286 4563 l
 2269 4556 l 2250 4549 l 2229 4540 l 2207 4529 l 2185 4517 l
 2162 4503 l 2140 4487 l 2117 4467 l 2093 4445 l 2070 4417 l
 2047 4386 l 2025 4350 l 2007 4315 l 1993 4281 l 1981 4246 l
 1971 4213 l 1963 4181 l 1958 4150 l 1954 4119 l 1951 4090 l
 1949 4061 l 1948 4034 l 1947 4007 l 1947 3983 l 1948 3960 l
 1948 3941 l 1949 3926 l
 1950 3900 l gs col0 s gr gr

% arrowhead
n 1973 4071 m 1949 3920 l 1913 4068 l 1944 4039 l 1973 4071 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
1856 5652 m 1908 5623 l 1817 5462 l 1865 5608 l 1765 5491 l cp
eoclip
n 2400 4725 m 2399 4726 l 2396 4727 l 2391 4731 l 2382 4735 l 2371 4742 l
 2357 4750 l 2339 4761 l 2319 4773 l 2297 4787 l 2272 4803 l
 2246 4820 l 2220 4838 l 2192 4856 l 2164 4876 l 2136 4897 l
 2108 4918 l 2080 4941 l 2053 4965 l 2025 4990 l 1998 5017 l
 1972 5045 l 1945 5075 l 1920 5107 l 1897 5141 l 1875 5175 l
 1853 5216 l 1836 5255 l 1824 5292 l 1815 5326 l 1810 5358 l
 1807 5387 l 1808 5415 l 1810 5442 l 1814 5466 l 1819 5490 l
 1826 5513 l 1833 5534 l 1840 5553 l 1848 5570 l 1855 5586 l
 1861 5599 l 1866 5609 l
 1875 5625 l gs col0 s gr gr

% arrowhead
n 1765 5491 m 1865 5608 l 1817 5462 l 1806 5503 l 1765 5491 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
3204 5201 m 3258 5175 l 3178 5008 l 3216 5157 l 3124 5034 l cp
eoclip
n 2550 4800 m 2551 4801 l 2554 4804 l 2559 4809 l 2566 4815 l 2575 4824 l
 2586 4834 l 2599 4845 l 2614 4856 l 2629 4868 l 2647 4881 l
 2667 4894 l 2689 4907 l 2714 4921 l 2743 4936 l 2775 4950 l
 2808 4963 l 2838 4974 l 2864 4982 l 2885 4987 l 2901 4989 l
 2913 4990 l 2923 4989 l 2931 4988 l 2939 4986 l 2949 4985 l
 2961 4986 l 2976 4988 l 2995 4993 l 3019 5001 l 3046 5012 l
 3075 5025 l 3105 5042 l 3131 5058 l 3151 5074 l 3168 5089 l
 3181 5103 l 3192 5117 l 3202 5130 l 3209 5143 l 3215 5154 l

 3225 5175 l gs col0 s gr gr

% arrowhead
n 3124 5034 m 3216 5157 l 3178 5008 l 3164 5048 l 3124 5034 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
7899 3877 m 7842 3893 l 7892 4071 l 7880 3919 l 7950 4054 l cp
eoclip
n 7650 4425 m 7652 4424 l 7657 4421 l 7665 4416 l 7677 4409 l 7692 4400 l
 7709 4389 l 7727 4376 l 7747 4361 l 7766 4346 l 7786 4328 l
 7805 4308 l 7824 4286 l 7842 4261 l 7859 4232 l 7875 4200 l
 7887 4167 l 7896 4135 l 7901 4105 l 7904 4078 l 7904 4052 l
 7903 4027 l 7900 4004 l 7896 3982 l 7892 3962 l 7887 3943 l
 7883 3928 l
 7875 3900 l gs col0 s gr gr

% arrowhead
n 7950 4054 m 7880 3919 l 7892 4071 l 7912 4034 l 7950 4054 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
7841 5546 m 7892 5578 l 7989 5421 l 7885 5533 l 7938 5389 l cp
eoclip
n 7725 4725 m 7726 4726 l 7728 4729 l 7732 4734 l 7738 4742 l 7746 4753 l
 7756 4767 l 7768 4783 l 7781 4802 l 7795 4822 l 7809 4845 l
 7824 4868 l 7839 4892 l 7854 4918 l 7868 4944 l 7882 4972 l
 7896 5002 l 7909 5033 l 7921 5066 l 7932 5101 l 7942 5137 l
 7950 5175 l 7957 5220 l 7960 5262 l 7960 5300 l 7957 5334 l
 7953 5364 l 7947 5392 l 7939 5418 l 7931 5441 l 7922 5463 l
 7913 5483 l 7903 5501 l 7895 5516 l 7888 5529 l
 7875 5550 l gs col0 s gr gr

% arrowhead
n 7938 5389 m 7885 5533 l 7989 5421 l 7948 5430 l 7938 5389 l 
 cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 6600 4800 m 6601 4802 l 6602 4805 l 6604 4811 l 6607 4818 l 6612 4826 l
 6617 4834 l 6624 4843 l 6632 4852 l 6643 4860 l 6658 4868 l
 6675 4875 l 6694 4880 l 6711 4884 l 6724 4886 l 6733 4887 l
 6739 4887 l 6744 4887 l 6749 4887 l 6755 4887 l 6766 4886 l
 6781 4884 l 6801 4880 l 6825 4875 l 6849 4868 l 6870 4862 l
 6886 4857 l 6897 4853 l 6906 4851 l 6913 4850 l 6919 4848 l
 6926 4845 l 6935 4840 l 6947 4831 l 6961 4817 l 6975 4800 l
 6984 4784 l 6990 4769 l 6994 4756 l 6996 4747 l 6996 4740 l
 6995 4735 l 6994 4731 l 6992 4727 l 6990 4722 l 6988 4714 l
 6986 4704 l 6983 4689 l 6980 4671 l 6975 4650 l 6968 4626 l
 6962 4606 l 6957 4592 l 6953 4583 l 6951 4578 l 6950 4575 l
 6948 4572 l 6945 4567 l 6940 4558 l 6931 4544 l 6917 4524 l
 6900 4500 l 6884 4479 l 6868 4461 l 6854 4447 l 6843 4438 l
 6834 4431 l 6826 4428 l 6819 4425 l 6812 4422 l 6804 4419 l
 6796 4412 l 6786 4403 l 6774 4389 l 6762 4371 l 6750 4350 l
 6741 4329 l 6735 4309 l 6732 4292 l 6731 4276 l 6731 4262 l
 6733 4249 l 6736 4237 l 6739 4227 l 6743 4217 l 6746 4210 l
 6748 4205 l 6749 4201 l
 6750 4200 l gs col0 s gr 
/Times-Roman ff 180.00 scf sf
4650 1650 m
gs 1 -1 sc (x) col0 sh gr
/Times-Roman ff 180.00 scf sf
8400 3075 m
gs 1 -1 sc (y) col0 sh gr
/Times-Roman ff 180.00 scf sf
5850 4425 m
gs 1 -1 sc (electrode) col0 sh gr
/Times-Roman ff 180.00 scf sf
8400 5550 m
gs 1 -1 sc (z) col0 sh gr
/Times-Roman ff 180.00 scf sf
7050 4650 m
gs 1 -1 sc (velcro male) col0 sh gr
/Times-Roman ff 180.00 scf sf
5775 3150 m
gs 1 -1 sc (fp2) col0 sh gr
/Times-Roman ff 180.00 scf sf
3825 3150 m
gs 1 -1 sc (fp1) col0 sh gr
% Polyline
15.000 slw
n 5955 4575 m 5850 4575 5850 4845 105 arcto 4 {pop} repeat
  5850 4950 6495 4950 105 arcto 4 {pop} repeat
  6600 4950 6600 4680 105 arcto 4 {pop} repeat
  6600 4575 5955 4575 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
30.000 slw
n 5925 4950 m
 6525 4950 l gs col0 s gr 
% Polyline
7.500 slw
 [60] 0 sd
gs  clippath
7665 1830 m 7665 1770 l 7514 1770 l 7634 1800 l 7514 1830 l cp
2160 1770 m 2160 1830 l 2311 1830 l 2191 1800 l 2311 1770 l cp
eoclip
n 2175 1800 m
 7650 1800 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 2311 1770 m 2191 1800 l 2311 1830 l 2311 1770 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 7514 1830 m 7634 1800 l 7514 1770 l 7514 1830 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 2175 2175 m 7650 2175 l 7650 3974 l 2175 3974 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P3 [16 0 0 -8 145.00 145.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
 [60] 0 sd
gs  clippath
8220 3990 m 8280 3990 l 8280 3839 l 8250 3959 l 8220 3839 l cp
8280 2160 m 8220 2160 l 8220 2311 l 8250 2191 l 8280 2311 l cp
eoclip
n 8250 2175 m
 8250 3975 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 8280 2311 m 8250 2191 l 8220 2311 l 8280 2311 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 8220 3839 m 8250 3959 l 8280 3839 l 8220 3839 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
 [60] 0 sd
gs  clippath
8220 5715 m 8280 5715 l 8280 5564 l 8250 5684 l 8220 5564 l cp
8280 5235 m 8220 5235 l 8220 5386 l 8250 5266 l 8280 5386 l cp
eoclip
n 8250 5250 m
 8250 5700 l gs col0 s gr gr
 [] 0 sd
% arrowhead
n 8280 5386 m 8250 5266 l 8220 5386 l 8280 5386 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 8220 5564 m 8250 5684 l 8280 5564 l 8220 5564 l  cp gs 0.00 setgray ef gr  col0 s
/Times-Roman ff 180.00 scf sf
4650 4725 m
gs 1 -1 sc (Velcro male) col0 sh gr
/Times-Roman ff 180.00 scf sf
2475 4725 m
gs 1 -1 sc (Velcro female) col0 sh gr
$F2psEnd
rs
end
