%!PS-Adobe-2.0 EPSF-2.0
%%Title: electrode-structure.eps
%%Creator: fig2dev Version 3.2.3 Patchlevel 
%%CreationDate: Sun May  7 23:27:30 2000
%%For: thys@klara (Thys Meintjes)
%%BoundingBox: 0 0 260 267
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 267 moveto 0 0 lineto 260 0 lineto 260 267 lineto closepath clip newpath
-129.0 459.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
%thys
	  2 index oldshow		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<010101010202020204040404080808081010101020202020
	404040408080808001010101020202020404040408080808
	101010102020202040404040808080800101010102020202
	040404040808080810101010202020204040404080808080
	010101010202020204040404080808081010101020202020
	4040404080808080>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
%%Page: 1 1
10 setmiterlimit
 0.06000 0.06000 sc
% Arc
7.500 slw
n 4837.5 6262.5 863.3 124.4 55.6 arcn
gs col0 s gr

% Arc
gs  clippath
4458 7055 m 4409 7020 l 4319 7142 l 4415 7063 l 4368 7177 l cp
eoclip
n 3862.5 6712.5 656.0 121.0 31.0 arcn
gs col0 s gr
 gr

% arrowhead
n 4368 7177 m 4415 7063 l 4319 7142 l 4368 7177 l  cp gs 0.00 setgray ef gr  col0 s
% Arc
gs  clippath
3279 6198 m 3291 6257 l 3439 6227 l 3316 6222 l 3427 6168 l cp
eoclip
n 3276.5 5805.5 420.2 -63.3 86.8 arc
gs col0 s gr
 gr

% arrowhead
n 3427 6168 m 3316 6222 l 3439 6227 l 3427 6168 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 4800 4125 m 4802 4124 l 4805 4123 l 4812 4120 l 4821 4116 l 4835 4111 l
 4851 4104 l 4871 4095 l 4893 4084 l 4917 4073 l 4941 4060 l
 4966 4045 l 4991 4030 l 5015 4013 l 5038 3996 l 5058 3977 l
 5077 3956 l 5092 3934 l 5105 3910 l 5114 3883 l 5119 3854 l
 5118 3821 l 5112 3787 l 5100 3750 l 5086 3720 l 5068 3690 l
 5049 3660 l 5028 3631 l 5007 3604 l 4987 3578 l 4967 3553 l
 4948 3529 l 4930 3507 l 4913 3486 l 4897 3466 l 4882 3447 l
 4867 3429 l 4852 3411 l 4837 3394 l 4823 3377 l 4807 3360 l
 4791 3344 l 4773 3328 l 4753 3312 l 4732 3296 l 4708 3281 l
 4682 3267 l 4653 3254 l 4621 3242 l 4586 3232 l 4549 3224 l
 4509 3220 l 4467 3220 l 4425 3225 l 4383 3235 l 4343 3250 l
 4305 3268 l 4271 3288 l 4240 3311 l 4213 3334 l 4191 3358 l
 4172 3382 l 4156 3405 l 4143 3429 l 4133 3452 l 4124 3475 l
 4117 3498 l 4112 3521 l 4106 3544 l 4101 3567 l 4095 3590 l
 4089 3614 l 4081 3639 l 4072 3665 l 4060 3692 l 4045 3720 l
 4028 3749 l 4008 3780 l 3984 3812 l 3957 3844 l 3927 3878 l
 3894 3911 l 3860 3944 l 3825 3975 l 3774 4017 l 3727 4051 l
 3686 4078 l 3653 4097 l 3625 4110 l 3604 4117 l 3587 4120 l
 3575 4119 l 3565 4117 l 3556 4112 l 3548 4108 l 3539 4103 l
 3529 4100 l 3516 4097 l 3500 4097 l 3480 4099 l 3457 4103 l
 3431 4109 l 3403 4117 l 3375 4125 l 3363 4128 l 3353 4131 l
 3343 4134 l 3334 4136 l 3326 4138 l 3319 4140 l 3313 4141 l
 3307 4142 l 3302 4143 l 3298 4144 l 3294 4144 l 3291 4144 l
 3289 4144 l 3287 4144 l 3285 4144 l 3284 4144 l 3283 4143 l
 3283 4142 l 3283 4141 l 3283 4140 l 3284 4139 l 3284 4138 l
 3285 4137 l 3286 4136 l 3287 4135 l 3289 4134 l 3290 4133 l
 3291 4132 l 3292 4131 l 3293 4130 l 3294 4129 l 3296 4128 l
 3296 4127 l 3297 4127 l 3298 4126 l 3299 4126 l 3299 4125 l

 3300 4125 l gs col0 s gr 
% Polyline
n 4125 6750 m 4123 6750 l 4118 6751 l 4110 6753 l 4097 6755 l 4079 6758 l
 4057 6762 l 4030 6766 l 4000 6771 l 3966 6776 l 3930 6780 l
 3893 6785 l 3855 6789 l 3816 6793 l 3777 6796 l 3738 6798 l
 3699 6798 l 3661 6798 l 3623 6795 l 3585 6791 l 3549 6785 l
 3514 6776 l 3480 6764 l 3450 6750 l 3417 6727 l 3394 6703 l
 3380 6679 l 3376 6656 l 3379 6635 l 3389 6617 l 3403 6600 l
 3419 6584 l 3438 6569 l 3456 6554 l 3473 6538 l 3488 6520 l
 3498 6501 l 3504 6479 l 3502 6455 l 3493 6429 l 3476 6401 l
 3450 6375 l 3424 6356 l 3396 6340 l 3365 6326 l 3334 6316 l
 3302 6307 l 3270 6301 l 3237 6296 l 3204 6293 l 3171 6291 l
 3138 6291 l 3105 6291 l 3074 6291 l 3044 6292 l 3016 6294 l
 2991 6295 l 2970 6296 l 2953 6298 l 2940 6299 l 2932 6299 l
 2927 6300 l
 2925 6300 l gs col0 s gr 
% Polyline
gs  clippath
3602 4156 m 3551 4188 l 3632 4316 l 3594 4199 l 3683 4284 l cp
eoclip
n 3465 5265 m 3467 5264 l 3470 5261 l 3476 5257 l 3485 5250 l 3497 5240 l
 3512 5228 l 3529 5213 l 3549 5196 l 3570 5177 l 3592 5156 l
 3614 5134 l 3635 5110 l 3657 5084 l 3677 5057 l 3697 5027 l
 3716 4995 l 3733 4960 l 3748 4921 l 3762 4879 l 3773 4833 l
 3780 4785 l 3783 4740 l 3783 4695 l 3781 4653 l 3775 4612 l
 3768 4573 l 3759 4537 l 3749 4502 l 3737 4468 l 3724 4436 l
 3711 4405 l 3696 4375 l 3682 4346 l 3667 4319 l 3652 4293 l
 3639 4270 l 3626 4249 l 3614 4231 l 3605 4215 l 3597 4204 l

 3585 4185 l gs col0 s gr gr

% arrowhead
n 3683 4284 m 3594 4199 l 3632 4316 l 3683 4284 l  cp gs 0.00 setgray ef gr  col0 s
/Times-Roman ff 180.00 scf sf
3345 7230 m
gs 1 -1 sc (dome) col0 sh gr
/Times-Roman ff 180.00 scf sf
2160 5385 m
gs 1 -1 sc (connecting cable) col0 sh gr
/Times-Roman ff 180.00 scf sf
4740 7650 m
gs 1 -1 sc (x) col0 sh gr
/Times-Roman ff 180.00 scf sf
6375 6780 m
gs 1 -1 sc (y) col0 sh gr
% Ellipse
n 4800 4800 691 691 0 360 DrawEllipse gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 273.93 273.93] PATmp PATsp ef gr PATusp gs col-1 s gr

% Polyline
gs  clippath
5550 7425 m 5550 7365 l 5365 7365 l 5515 7395 l 5365 7425 l cp
4080 7365 m 4080 7425 l 4265 7425 l 4115 7395 l 4265 7365 l cp
eoclip
n 4095 7395 m
 5535 7395 l gs col-1 s gr gr

% arrowhead
n 4265 7365 m 4115 7395 l 4265 7425 l 4235 7395 l 4265 7365 l 
 cp gs 0.00 setgray ef gr  col-1 s
% arrowhead
n 5365 7425 m 5515 7395 l 5365 7365 l 5395 7395 l 5365 7425 l 
 cp gs 0.00 setgray ef gr  col-1 s
% Polyline
 [60] 0 sd
gs  clippath
6165 6960 m 6225 6960 l 6225 6775 l 6195 6925 l 6165 6775 l cp
6225 6435 m 6165 6435 l 6165 6620 l 6195 6470 l 6225 6620 l cp
eoclip
n 6195 6450 m
 6195 6945 l gs col-1 s gr gr
 [] 0 sd
% arrowhead
n 6225 6620 m 6195 6470 l 6165 6620 l 6195 6590 l 6225 6620 l 
 cp gs 0.00 setgray ef gr  col-1 s
% arrowhead
n 6165 6775 m 6195 6925 l 6225 6775 l 6195 6805 l 6165 6775 l 
 cp gs 0.00 setgray ef gr  col-1 s
% Polyline
n 4230 6450 m 4125 6450 4125 6870 105 arcto 4 {pop} repeat
  4125 6975 5370 6975 105 arcto 4 {pop} repeat
  5475 6975 5475 6555 105 arcto 4 {pop} repeat
  5475 6450 4230 6450 105 arcto 4 {pop} repeat
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 275.00 430.00] PATmp PATsp ef gr PATusp gs col-1 s gr 
% Polyline
n 4125 6600 m
 5475 6600 l gs col-1 s gr 
% Polyline
n 4076 4845 m 4084 4845 l gs col-1 s gr
% Polyline
n 5516 4815 m 5524 4815 l gs col-1 s gr
% Polyline
n 5576 6450 m 5584 6450 l gs col-1 s gr
% Polyline
n 5546 6945 m 5554 6945 l gs col-1 s gr
% Polyline
 [15 45] 45 sd
n 4125 4875 m
 4125 7425 l gs col-1 s gr  [] 0 sd
% Polyline
 [15 45] 45 sd
n 5475 4800 m
 5475 7425 l gs col-1 s gr  [] 0 sd
% Polyline
 [15 45] 45 sd
n 5400 6450 m
 6225 6450 l gs col-1 s gr  [] 0 sd
% Polyline
 [15 45] 45 sd
n 5250 6975 m
 6225 6975 l gs col-1 s gr  [] 0 sd
$F2psEnd
rs
end
